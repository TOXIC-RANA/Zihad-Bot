const axios = require('axios');
const baseApiUrl = async () => {
  return "https://www.noobs-api.rf.gd/dipto";
};

module.exports.config = {
  name: "bby",
  aliases: ["baby", "bbe", "babe"],
  version: "6.9.0",
  author: "dipto",
  countDown: 0,
  role: 0,
  description: "better then all sim simi",
  category: "chat",
  guide: {
    en: "{pn} [anyMessage] OR\nteach [YourMessage] - [Reply1], [Reply2], [Reply3]... OR\nteach [react] [YourMessage] - [react1], [react2], [react3]... OR\nremove [YourMessage] OR\nrm [YourMessage] - [indexNumber] OR\nmsg [YourMessage] OR\nlist OR \nall OR\nedit [YourMessage] - [NeeMessage]"
  }
};

module.exports.onStart = async ({ api, event, args, usersData }) => {
  const link = `${await baseApiUrl()}/baby`;
  const dipto = args.join(" ").toLowerCase();
  const uid = event.senderID;
  let command, comd, final;

  try {
    if (!args[0]) {
      const ran = ["Bolo baby", "hum", "type help baby", "type !baby hi"];
      return api.sendMessage(ran[Math.floor(Math.random() * ran.length)], event.threadID, event.messageID);
    }

    if (args[0] === 'remove') {
      const fina = dipto.replace("remove ", "");
      const dat = (await axios.get(`${link}?remove=${fina}&senderID=${uid}`)).data.message;
      return api.sendMessage(dat, event.threadID, event.messageID);
    }

    if (args[0] === 'rm' && dipto.includes('-')) {
      const [fi, f] = dipto.replace("rm ", "").split(' - ');
      const da = (await axios.get(`${link}?remove=${fi}&index=${f}`)).data.message;
      return api.sendMessage(da, event.threadID, event.messageID);
    }

    if (args[0] === 'list') {
      if (args[1] === 'all') {
        const data = (await axios.get(`${link}?list=all`)).data;
        const teachers = await Promise.all(data.teacher.teacherList.map(async (item) => {
          const number = Object.keys(item)[0];
          const value = item[number];
          const name = (await usersData.get(number)).name;
          return { name, value };
        }));
        teachers.sort((a, b) => b.value - a.value);
        const output = teachers.map((t, i) => `${i + 1}/ ${t.name}: ${t.value}`).join('\n');
        return api.sendMessage(`Total Teach = ${data.length}\nЁЯСС | List of Teachers of baby\n${output}`, event.threadID, event.messageID);
      } else {
        const d = (await axios.get(`${link}?list=all`)).data.length;
        return api.sendMessage(`Total Teach = ${d}`, event.threadID, event.messageID);
      }
    }

    if (args[0] === 'msg') {
      const fuk = dipto.replace("msg ", "");
      const d = (await axios.get(`${link}?list=${fuk}`)).data.data;
      return api.sendMessage(`Message ${fuk} = ${d}`, event.threadID, event.messageID);
    }

    if (args[0] === 'edit') {
      const command = dipto.split(' - ')[1];
      if (command.length < 2) return api.sendMessage('тЭМ | Invalid format! Use edit [YourMessage] - [NewReply]', event.threadID, event.messageID);
      const dA = (await axios.get(`${link}?edit=${args[1]}&replace=${command}&senderID=${uid}`)).data.message;
      return api.sendMessage(`changed ${dA}`, event.threadID, event.messageID);
    }

    if (args[0] === 'teach' && args[1] !== 'amar' && args[1] !== 'react') {
      [comd, command] = dipto.split(' - ');
      final = comd.replace("teach ", "");
      if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
      const re = await axios.get(`${link}?teach=${final}&reply=${command}&senderID=${uid}`);
      const tex = re.data.message;
      const teacher = (await usersData.get(re.data.teacher)).name;
      return api.sendMessage(`тЬЕ Replies added ${tex}\nTeacher: ${teacher}\nTeachs: ${re.data.teachs}`, event.threadID, event.messageID);
    }

    if (args[0] === 'teach' && args[1] === 'amar') {
      [comd, command] = dipto.split(' - ');
      final = comd.replace("teach ", "");
      if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
      const tex = (await axios.get(`${link}?teach=${final}&senderID=${uid}&reply=${command}&key=intro`)).data.message;
      return api.sendMessage(`тЬЕ Replies added ${tex}`, event.threadID, event.messageID);
    }

    if (args[0] === 'teach' && args[1] === 'react') {
      [comd, command] = dipto.split(' - ');
      final = comd.replace("teach react ", "");
      if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
      const tex = (await axios.get(`${link}?teach=${final}&react=${command}`)).data.message;
      return api.sendMessage(`тЬЕ Replies added ${tex}`, event.threadID, event.messageID);
    }

    if (dipto.includes('amar name ki') || dipto.includes('amr nam ki') || dipto.includes('amar nam ki') || dipto.includes('amr name ki') || dipto.includes('whats my name')) {
      const data = (await axios.get(`${link}?text=amar name ki&senderID=${uid}&key=intro`)).data.reply;
      return api.sendMessage(data, event.threadID, event.messageID);
    }

    const d = (await axios.get(`${link}?text=${dipto}&senderID=${uid}&font=1`)).data.reply;
    api.sendMessage(d, event.threadID, (error, info) => {
      global.GoatBot.onReply.set(info.messageID, {
        commandName: this.config.name,
        type: "reply",
        messageID: info.messageID,
        author: event.senderID,
        d, 
        apiUrl: link
      });
    }, event.messageID);

  } catch (e) {
    console.log(e);
    api.sendMessage("Check console for error", event.threadID, event.messageID);
  }
};

module.exports.onReply = async ({ api, event, Reply }) => {
  try{
  if (event.type == "message_reply") {
    const a = (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(event.body?.toLowerCase())}&senderID=${event.senderID}&font=1`)).data.reply;
    await api.sendMessage(a, event.threadID, (error, info) => {
      global.GoatBot.onReply.set(info.messageID, {
        commandName: this.config.name,
        type: "reply",
        messageID: info.messageID,
        author: event.senderID,
        a
      });
    }, event.messageID);
  }  
  }catch(err){
      return api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);
    }};

module.exports.onChat = async ({ api, event,message }) => {
  try{
    const body = event.body ? event.body?.toLowerCase() : ""
    if(body.startsWith("baby") || body.startsWith("bby") || body.startsWith("bot") || body.startsWith("mim") || body.startsWith("@mim Ahmed") || body.startsWith("ржорж┐ржо") || body.startsWith("janu")){
      const arr = body.replace(/^\S+\s*/, "")
      const randomReplies = ["ржЖржорж┐ ржПржЦржи ржмрж╕ ржПрж░ рж╕рж╛ржерзЗ ржмрж┐ржЬрж┐ ржЖржЫрж┐ ржЖржорж╛ржХрзЗ ржбрж╛ржХржмрзЗржи ржирж╛-ЁЯШХЁЯШП-ржзржирзНржпржмрж╛ржж-ЁЯдЭЁЯМ╗", "-ржЖржирзНржЯрж┐-ЁЯЩЖ-ржЖржкржирж╛рж░ ржорзЗржпрж╝рзЗ-ЁЯС░тАНтЩАя╕П-рж░рж╛рждрзЗ ржЖржорж╛рж░рзЗ ржнрж┐ржжрзБ ржХрж▓ ржжрж┐рждрзЗ ржмрж▓рзЗЁЯлг-ЁЯе╡ЁЯддЁЯТж", "-ржУ ржорж┐ржо ржУ ржорж┐ржо-ЁЯШЗ-рждрзБржорж┐ ржХрзЗржи ржЪрзБрж░рж┐ ржХрж░рж▓рж╛ рж╕рж╛ржжрж┐рзЯрж╛рж░ ржлрж░рзНрж╕рж╛ рж╣ржУрзЯрж╛рж░ ржХрзНрж░рзАржо-ЁЯШ╣" ,"-ЁЭЧвЁЭЧ╢ЁЭЧ╢ ржЖржирзНржЯрж┐-ЁЯЩЖтАНтЩВя╕П-рждрзЛржорж╛рж░ ржорзЗрзЯрзЗ ржЪрзЛржЦ ржорж╛рж░рзЗ-ЁЯе║ЁЯе┤ЁЯР╕", "рждрж╛ржХрж╛ржЗ ржЖржЫрзЛ ржХрзЗржи ржЪрзБржорзБ ржжрж┐ржмрж╛-ЁЯЩДЁЯР╕ЁЯШШ","ржЖржЬржХрзЗ ржкрзНрж░ржкрзЛржЬ ржХрж░рзЗ ржжрзЗржЦрзЛ рж░рж╛ржЬрж┐ рж╣ржЗрзЯрж╛ ржпрж╛ржорзБ-ЁЯШМЁЯдЧЁЯШЗ","-ржЖржорж╛рж░ ржЧрж▓рзНржкрзЗ рждрзЛржорж╛рж░ ржирж╛ржирж┐ рж╕рзЗрж░рж╛-ЁЯЩКЁЯЩЖтАНтЩВя╕ПЁЯдЧ", "-рждрж╛ржмрж┐ржЬ ржХржЗрж░рж╛ рж╣ржЗрж▓рзЗржУ ржлрзНрж░рзЗржо ржПржХрзНржХрж╛ржи ржХрж░ржорзБржЗ рждрж╛рждрзЗ ржпрж╛ рж╣ржЗ рж╣рзЛржХ-ЁЯдзЁЯе▒ЁЯМ╗","-ржЫрзЛржЯржмрзЗрж▓рж╛ ржнрж╛ржмрждрж╛ржо ржмрж┐рзЯрзЗ ржХрж░рж▓рзЗ ржЕржЯрзЛржорзЗржЯрж┐ржХ ржмрж╛ржЪрзНржЪрж╛ рж╣рзЯ-ЁЯе▒-ржУржорж╛ ржПржЦржи ржжрзЗржЦрж┐ ржХрж╛рж╣рж┐ржирзА ржЕржирзНржпрж░ржХржо-ЁЯШжЁЯЩВЁЯМ╗","-ржЖржЬ ржПржХржЯрж╛ ржмрж┐ржи ржирзЗржЗ ржмрж▓рзЗ ржлрзЗрж╕ржмрзБржХрзЗрж░ ржирж╛ржЧрж┐ржи-ЁЯдз-ржЧрзБрж▓рзЛрж░рзЗ ржЖржорж╛рж░ ржмрж╕ ржЬрж┐рж╣рж╛ржж ржзрж░рждрзЗ ржкрж╛рж░ржЫрзЗ ржирж╛-ЁЯР╕ЁЯе▓", "рж╣рзБржжрж╛ржЗ ржЖржорж╛рж░рзЗ  рж╢рзЯрждрж╛ржирзЗ рж▓рж╛рж░рзЗ-ЁЯШЭЁЯШСтШ╣я╕П","-ЁЭЧЬ ЁЭЧЯЁЭЧвЁЭЧйЁЭЧв ЁЭЧмЁЭЧвЁЭЧи-ЁЯШ╜-ржЖрж╣рж╛рж░рзЗ ржнрж╛ржмржЫрзЛ рждрзЛржорж╛рж░рзЗ ржкрзНрж░рзЗрж╛ржкржЬ ржХрж░ржЫрж┐-ЁЯе┤-ржерж╛ржкрзНржкрж░ ржжрж┐рзЯрж╛ ржХрж┐ржбржирзА рж▓ржХ ржХрж░рзЗ ржжрж┐ржм-ЁЯШТ-ржнрзБрж▓ ржкрзЬрж╛ ржмрзЗрж░ ржХрж░рзЗ ржжрж┐ржмрзЛ-ЁЯднЁЯР╕", "-ржХрждржжрж┐ржи рж╣ржпрж╝рзЗ ржЧрзЗрж▓рзЗрж╛ ржмрж┐ржЫржирж╛ржпрж╝ ржорзБрждрж┐ ржирж╛-ЁЯШ┐-ржорж┐рж╕ ржЗржЙ ржирзЗржВржЯрж╛ ржХрж╛рж▓-ЁЯе║ЁЯдз", "-ржПржЗ ржЖржирзНржЯрж┐рж░ ржорзЗрзЯрзЗ-ЁЯлвЁЯЩИ-ЁЭРФЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРЪЁЭРб-ЁЯШ╜ЁЯл╢-ржЖрж╕рж▓рзЗржЗ рждрзЛ рж╕рзНржмрж╛ржж-ЁЯе╡ЁЯТж-ржПрждрзЛ рж╕рзНржмрж╛ржж ржХрзЗржи-ЁЯдФ-рж╕рзЗржЗ рж╕рзНржмрж╛ржж-ЁЯШЛЁЯе║ЁЯдз", "ржХрж┐'рж░рзЗ ржЧрзНрж░рзБржкрзЗ ржжрзЗржЦрж┐ ржПржХржЯрж╛ржУ ржмрзЗржбрж╛ ржирж╛ржЗ-ЁЯджтАН","-ржЖржЬ ржерзЗржХрзЗ ржЖрж░ ржХрж╛ржЙржХрзЗ ржкрж╛рждрзНрждрж╛ ржжрж┐ржорзБ ржирж╛ -!ЁЯШП-ржХрж╛рж░ржг ржЖржорж┐ ржлрж░рзНрж╕рж╛ рж╣ржУрзЯрж╛рж░ ржХрзНрж░рж┐ржо ржХрж┐ржиржЫрж┐ -!ЁЯЩВЁЯР╕", "ржмрж╛рж░ ржмрж╛рж░ Disturb ржХрж░рзЗржЫрж┐рж╕ ржХрзЛржирзЛЁЯШ╛,ржЖржорж╛рж░ ржЬрж╛ржирзБрж░ рж╕рж╛ржерзЗ ржмрзНржпрж╛рж╕рзНржд ржЖрж╕рж┐ЁЯШЛ" , "ржЖржорж┐ ржЧрж░рзАржм ржПрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж┐ ржирж╛ЁЯШ╝ЁЯШ╝" , "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ ,ржЖржорж┐ ржХрж┐ржирзНрждрзВ ржХрж┐рж╕ ржХрж░рзЗ ржжрзЗржмрзЛЁЯШШ " , "ржЖрж░рзЗ ржЖржорж┐ ржоржЬрж╛ ржХрж░рж╛рж░ mood ржП ржирж╛ржЗЁЯШТ" , "рж╣рж╛ ржЬрж╛ржирзБ , ржПржЗржжрж┐ржХ ржП ржЖрж╕рзЛ ржХрж┐рж╕ ржжрзЗржЗЁЯдн", "ржмрж▓рзЛ ржХрж┐ ржмрж▓ржмрж╛, рж╕ржмрж╛рж░ рж╕рж╛ржоржирзЗ ржмрж▓ржмрж╛ ржирж╛ржХрж┐?ЁЯднЁЯдП", "ржХрж╛рж▓ржХрзЗ ржжрзЗржЦрж╛ ржХрж░рж┐рж╕ рждрзЛ ржПржХржЯрзБ ЁЯШИ", "рж╣рж╛ ржмрж▓рзЛ, рж╢рзБржиржЫрж┐ ржЖржорж┐ ЁЯШП", "ржЖрж░ ржХржд ржмрж╛рж░ ржбрж╛ржХржмрж┐ ,рж╢рзБржиржЫрж┐ рждрзЛ", "ржЖржорж┐ рждрзЛ ржЕржирзНржз ржХрж┐ржЫрзБ ржжрзЗржЦрж┐ ржирж╛ЁЯР╕ ЁЯШО" , "I Love U  kow jan", "- ржЕржирзБржорждрж┐ ржжрж┐рж▓рзЗ ЁЭЪИЁЭЪШЁЭЪЮЁЭЪГЁЭЪЮЁЭЪЛЁЭЪО-ржП ржХрж▓ ржжрж┐рждрж╛ржо..!ЁЯШТ","~ржЖржорж┐ ржорж╛рж░рж╛ ржЧрзЗрж▓рзЗ..!ЁЯЩВ ~ржЕржирзЗржХ ржорж╛ржирзБрж╖ ржмрж┐рж░ржХрзНржд рж╣ржУрзЯрж╛ ржерзЗржХрзЗ ржмрзЗржБржЪрзЗ  ржпрж╛ржмрзЗ..!ЁЯШЕЁЯТФ", " ржПржХ ржХрж╛ржл ржЪрж╛ ржмрж╛ржирж╛ржЗ рждрзЛржорж╛рж░ ржПрж░ ржЬржирзНржп ЁЯЩВЁЯР╕", "ржЬрж╛ржирзБ ЁЯШШ " , "ржмрж╛рж░ ржмрж╛рж░ Disturb ржХрж░ржЫрж┐рж╕ ржХрзЛржирзЛЁЯШ╛,ржЖржорж╛рж░ ржЬрж╛ржирзБрж░ рж╕рж╛ржерзЗ ржмрзНржпрж╛рж╕рзНржд ржЖржЫрж┐ЁЯШЛ" , "ржмрзЗржмрж┐ рждрзЛржорж╛рж░ ржирж╛ржирж┐рж░рзЗ ржЖржорж┐ рж░рж╛рждрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рж┐ЁЯШБЁЯШБЁЯШЪ", "Yes ЁЯША, I am here", "ржХрж┐ рж╕ржорж╕рзНржпрж╛ ржПрждрзЛ ржбрж╛ржХрзЛ ржХрзЗржи", "ржЖржорж┐ ржЖржорж╛рж░ ржЬрж╛ржирзБрж░ рж▓ржЧрзЗ ржмрж┐ржЬрж┐ ржЖржЫрж┐ ЁЯШ╝", "What's up?", "Bolo jaan ki korte panmr jonno", "ржЖрж░ ржХржд ржмрж╛рж░ ржбрж╛ржХржмрж╛, рж╢рзБржиржЫрж┐ рждрзЛ", "ржЖржо ржЧрж╛ржЫрзЗ ржЖржо ржирж╛ржЗ ржврж┐рж▓ ржХрзЗржи ржорж╛рж░рзЛ, рждрзЛржорж╛рж░ рж╕рж╛ржерзЗ ржкрзНрж░рзЗржо ржирж╛ржЗ ржмрзЗржмрж┐ ржХрзЗржи ржбрж╛ржХрзЛ", "ржжрзВрж░рзЗ ржпрж╛, рждрзЛрж░ ржХрзЛржирзЛ ржХрж╛ржЬ ржирж╛ржЗ, рж╢рзБржзрзБ bby bby ржХрж░рж┐рж╕", "Hop beda Boss ржмрж▓ boss", "Bby bolla pap hoibo,,", "Bby ржмрж▓рзЗ ржЕрж╕ржорзНржорж╛ржи ржХрж░ржЪрзНржЫрж┐ржЫ, ", "ржмрж▓рзЗржи sir_", "рждрзЛрж░ ржмрж┐рзЯрзЗ рж╣рзЯ ржирж┐ Bby рж╣ржЗрж▓рзЛ ржХрж┐ржнрж╛ржмрзЗ,, тАв", "Bby ржмрж▓рж▓рзЗ ржЪрж╛ржХрж░рж┐ ржерж╛ржХржмрзЗ ржирж╛", "ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣рзЯ ржХрж┐ржирзНрждрзБ", "ржмрж▓рзЛ ржлрзБрж▓ржЯрзБрж╢рж┐_ +", "ржнрзБрж▓рзЗ ржЬрж╛ржУ ржЖржорж╛ржХрзЗ", "Ato gulo bby k samlate parsi nah"];
      if(!arr){ 
  
   await api.sendMessage(randomReplies[Math.floor(Math.random() * randomReplies.length)], event.threadID, (error, info) => {
     if(!info) message.reply("info obj not found")
     global.GoatBot.onReply.set(info.messageID, {
        commandName: this.config.name,
        type: "reply",
        messageID: info.messageID,
        author: event.senderID
      });
  }, event.messageID)
    }
    const a = (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(arr)}&senderID=${event.senderID}&font=1`)).data.reply;
   await api.sendMessage(a, event.threadID, (error, info) => {
      global.GoatBot.onReply.set(info.messageID, {
        commandName: this.config.name,
        type: "reply",
        messageID: info.messageID,
        author: event.senderID,
        a
      });
  }, event.messageID)
    }
  }catch(err){
      return api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);
    }};
